# Project name, this will be used to prefix all container names
name: login-app # Name found in Backend Cargo.toml

services:
  backend:
    restart: always
    image: pseudopanda/login-app-backend:latest
    depends_on:
      db:
        condition: service_healthy
    # "Observability": Uncomment the following two lines to log to host fs #
    # volumes:
    #   - ./Backend/logs/server:/var/log/login-app-backend:rw
    # As endpoints.rs doesnt give a status endpoint,
    # https://stackoverflow.com/questions/46362935/how-to-add-a-docker-health-check-to-test-a-tcp-port-is-open
    # a generic healthcheck is included here with curl
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

  db:
    restart: always
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    # "Observability": Uncomment the following lines to log to host fs #
    #   - ./Backend/logs/db:/var/lib/postgresql/data/log:rw
    # command:
    #   [
    #     "postgres",
    #     "-c", "logging_collector=on",
    #     "-c", "log_destination=stderr",
    #     "-c", "log_directory=log",
    #     "-c", "log_statement=all",
    #     "-c", "log_rotation_age=1d"
    #   ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    restart: always
    image: pseudopanda/login-app-frontend:latest
    ports:
      # To use external reverse proxy, please edit nginx.conf and change the ports here
      - "443:443"
      - "80:80"
    depends_on:
      - backend
    healthcheck:
      # -kf to accept certificates with issues
      test: ["CMD-SHELL", "curl -kf https://localhost/ || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    volumes:
      - ./Frontend/nginx.conf:/etc/nginx/conf.d/frontend.conf:ro
      # Comment the following lines if using own certificate #
      - frontend_certs:/etc/ssl/certs
      - frontend_keys:/etc/ssl/private

      # Supply a gzip configuration to enable gzip compression #
      - ./Frontend/gzip.conf:/etc/nginx/conf.d/gzip.conf:ro
      # Supply blacklist of IP addresses #
      # - ./Frontend/blacklist.conf:/etc/nginx/conf.d/blacklist.conf:ro

      # Example letsencrypt certificate configuration #
      # Uncomment the following lines to use own certificate
      # To use external reverse proxy, please edit nginx.conf and ignore this section
      # - /etc/letsencrypt/live/yourdomain.com/cert.pem:/etc/ssl/certs/frontend.pem:ro
      # - /etc/letsencrypt/live/yourdomain.com/privkey.pem:/etc/ssl/private/frontend.key:ro

      # "Observability": Uncomment the following lines to log to host fs #
      # - ./Frontend/logs:/var/log/nginx:rw

volumes:
  db_data:
  # Remove the following volumes if using own certificate #
  frontend_certs:
  frontend_keys:
